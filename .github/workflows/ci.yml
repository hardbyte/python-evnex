name: Continuous Integration

on:
  release:
    types: [ published ]
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:


jobs:
  lint:
    name: Code Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dciborow/action-pylint@0.1.1
        with:
          github_token: ${{ secrets.github_token }}
          # GitHub Status Check won't become failure with warning.
          level: warning
          filter_mode: diff_context
          glob_pattern: "**/*.py"
          pylint_args: "--disable=all, --enable=unused-import"
      - name: Check formatting
        uses: psf/black@stable

  build:
    name: Build Python Package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      # load cached venv if cache exists
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      # install dependencies if cache does not exist
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: |
          poetry install --no-interaction --no-root
          poetry show --tree
      - name: Build Package
        run: poetry build
      - name: Save artifacts
        uses: actions/upload-artifact@v3
        with:
          name: python-evnex
          path: ./dist

  release:
    name: Release to PyPi
    needs: [build]
    runs-on: ubuntu-latest

    # upload to PyPI only on release
    if: github.event.release && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: python-evnex
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.8.7
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}