name: Continuous Integration

on:
  release:
    types: [ published ]
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:


jobs:
  lint:
    name: Code Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v6
        with:
          python-version: 3.12

      - name: Install dependencies for linting
        run: uv sync --group dev
      - name: Check formatting
        run: uv run ruff format --check . # Or use chartboost/ruff-action if it works with uv env
      - name: Lint
        run: uv run ruff check .

  build:
    name: Build Python Package
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12" ]
    steps:
      - uses: actions/checkout@v4
      - name: Install the latest version of uv and set the python version
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: uv sync
      - name: Build Package
        run: uv build
      - name: Check build artifacts
        run: uvx twine check --strict dist/*
      - name: Save artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release
          path: ./dist

  release:
    name: Release to PyPi
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      attestations: write

    # upload to PyPI only on release
    if: github.event.release && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        #with:
        #  skip-existing: true